
namespace LINDev{
	class DEVMNG{
		ctor( /*输入构造函数所需要的参数*/ ){
			import PLin;
			import USB2LIN;
			PLinHw = PLin.PLINHW()			//Peak System PLIN
			USB2LINHw = USB2LIN.USBLINHW()	//Tossmoss USB2LIN
			
			SupportDev = {};//支持的设备
			Connected = false;
		};
		type=me;
		/*对象的所有成员必须用分号分隔*/
		/*成员函数*/
		//加载DLL
		LoadDll = function(){
			var DevCount = 1;//局部变量 DevCount 设备计数
			//加载PLIN驱动
			if(PLinHw.LoadDll() == 0){
				//加载成功
				SupportDev[DevCount] = "PCAN/PLIN"
				DevCount += 1
			}
			else {
				..publish("显示消息","PCAN/PLIN DLL加载失败")
			}
			//加载USB2LIN驱动
			
			if(USB2LINHw.LoadDll() == 0){
				//加载成功
				SupportDev[DevCount] = "USB2LIN"
				DevCount += 1
			}
			else {
				..publish("显示消息","USB2LIN DLL加载失败")
			}
			
		}
		//获取已加载成功的设备
		GetSuppotredDev = function(){
			return SupportDev; 
		}
		//刷新硬件，获取LIN通道
		FlashHw = function(dev){
			SelectedDev = ""
			if(dev == "PCAN/PLIN"){
				PLinHw.FlashHw()
				SelectedDev = dev
				return PLinHw.GetAvailableHW()
			}
			elseif(dev == "USB2LIN"){
				USB2LINHw.FlashHw()
				SelectedDev = dev
				return USB2LINHw.GetAvailableHW()
			}
			
		}
		//连接硬件
		Connect = function(chn){
			var ret = 0xff
			if(SelectedDev == "PCAN/PLIN"){
				ret = PLinHw.Connect(chn,19200)
			}
			elseif(SelectedDev == "USB2LIN"){
				ret = USB2LINHw.OpenDevice(1)//todo:任意设备
			}
			if(ret == 0){
				ConnectedDev = SelectedDev
				Connected = true
			}
			return ret;
		}
		
		isConnected = function(){
			return Connected
		}
		
		Disconnect = function(){
			if(ConnectedDev == "PCAN/PLIN"){
				PLinHw.Disconnect()//断开连接
			}
			elseif(ConnectedDev == "USB2LIN"){
				USB2LINHw.CloseDevice(1)//todo:任意设备
			}
			
		}
		
		TransmitID = function(id){
			if(ConnectedDev == "PCAN/PLIN"){
				PLinHw.TransmitID(id)//发送ID
			}
			elseif(ConnectedDev == "USB2LIN"){
				//USB2LIN待完善
			}
		}
		
		Transmit3C = function(data){
			if(ConnectedDev == "PCAN/PLIN"){
				this.TransmitID(0x01)
				sleep(10)
				if(#data <= 8){
					this.TransmitData(0x3C,data)
					sleep(10)
					data = this.ReadID(0x3D)
					var alldata={}; 
					var count = 1; 
					if(data[2] == 0x10){//多帧
						//首帧
						var len = data[3]; 
						for(i=4;#data;1){
							alldata[count] = data[i]
							count += 1
						}
						//续帧
						while(len > 6){
							len -= 5
							data = this.ReadID(0x3D)
							for(i=3;#data;1){
								alldata[count] = data[i]
								count += 1
							}
							
						}
					}
					else {//单帧
						for(i=3;#data;1){
							alldata[count] = data[i]
							count += 1
						}
					}
					return alldata; 
				}
			}
			elseif(ConnectedDev == "USB2LIN"){
				//USB2LIN待完善
			}
		}
		
		
		TransmitData = function(id,data){
			if(ConnectedDev == "PCAN/PLIN"){
				PLinHw.TransmitData(id,data)//发送数据
			}
			elseif(ConnectedDev == "USB2LIN"){
				//USB2LIN待完善
			}
		}
		
		ReadID = function(id){
			if(ConnectedDev == "PCAN/PLIN"){
				var ret,msgtemp
				//清空数据
				do{
					ret,msgtemp = PLinHw.ReadMsg()//读取数据
				}while(ret == 0)//直到读取完成
				
				PLinHw.TransmitID(id)//发送ID
				sleep(15)//等待10ms
				do{
					ret,msgtemp = PLinHw.ReadMsg()//读取数据
					if(ret == 0){//读到数据
						if((msgtemp.FrameId&0x3f) == id){
							//正确ID,返回数据
							return msgtemp.Data; 
						}
					}
				}while(ret == 0)//直到读取完成
				return null; 
			}
			elseif(ConnectedDev == "USB2LIN"){
				//USB2LIN待完善
			}
		}
		
		ReadDID = function(nad,did){
			import UserLib;
			if(ConnectedDev == "PCAN/PLIN"){
				var data = {nad,0x03,0x22,did>>8,did&0xff,0xff,0xff,0xff}; 
				return this.Transmit3C(data);
			}
			elseif(ConnectedDev == "USB2LIN"){
				//USB2LIN待完善
			}
		}
		
		
		
		
		
	}
		
}
